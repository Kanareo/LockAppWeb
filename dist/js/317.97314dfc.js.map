{"version":3,"file":"js/317.97314dfc.js","mappings":"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","sources":["webpack://vue-app/./src/components/LockSim.vue","webpack://vue-app/./src/components/LockSim.vue?44b4"],"sourcesContent":["<template>\r\n  <MainLayout>\r\n    <div class=\"content\">\r\n      <div class=\"wrapper\">\r\n        <div class=\"center\">\r\n          <div class=\"sim\">\r\n            <select v-model=\"selected\">\r\n              <option disabled value=\"\">Select lock to emulate</option>\r\n              <option v-for=\"item in this.locks\" :key=\"item.key\">\r\n                {{ item.ID }}\r\n              </option>\r\n            </select>\r\n            <div v-if=\"selected\">\r\n              <h2>LockSimulator</h2>\r\n              <div class=\"form-group\">\r\n                <label for=\"name\">Credentials</label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"name\"\r\n                  required\r\n                  v-model=\"credentials\"\r\n                  name=\"name\"\r\n                />\r\n              </div>\r\n              <div class=\"buttons\">\r\n                <button @click=\"validate\" class=\"btn btn-success\">Send</button>\r\n                <button @click=\"authorizeAccess\" class=\"btn btn-success\">\r\n                  WebAuth\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <!--\r\n                <button @click=\"updateLockAuth\" class=\"btn btn-success\">Test</button> \r\n            -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <Teleport to=\"body\">\r\n      <Message\r\n        :messageType=\"messageType\"\r\n        :show=\"showMessage\"\r\n        :message=\"messageContent\"\r\n        :closeMessage=\"closeMessage\"\r\n      />\r\n    </Teleport>\r\n  </MainLayout>\r\n</template>\r\n\r\n<script>\r\nimport DataService from \"../services/DataService\";\r\nimport { onValue, get } from \"firebase/database\";\r\nimport moment from \"moment\";\r\nimport Message from \"./Message\";\r\nimport MainLayout from \"./MainLayout.vue\";\r\nexport default {\r\n  name: \"LockSim\",\r\n  components: { MainLayout, Message },\r\n  data() {\r\n    return {\r\n      usersDB: [],\r\n      locks: [],\r\n      selected: \"\",\r\n      currentUser: \"\",\r\n      showSim: false,\r\n      credentials: \"\",\r\n      codeCheck: false,\r\n      id: \"\",\r\n      tries: 3,\r\n      scheduleT: [],\r\n      authType: \"\",\r\n      showMessage: false,\r\n      messageType: \"\",\r\n      messageContent: \"\",\r\n    };\r\n  },\r\n  watch: {\r\n    selected: function () {\r\n      this.clearMem();\r\n      this.selectLock();\r\n    },\r\n  },\r\n  methods: {\r\n    printMessage(type, message) {\r\n      this.showMessage = true;\r\n      this.messageType = type;\r\n      this.messageContent = message;\r\n    },\r\n    closeMessage() {\r\n      this.showMessage = false;\r\n    },\r\n    clearMem() {\r\n      this.credentials = \"\";\r\n      this.codeCheck = false;\r\n      this.id = \"\";\r\n      this.tries = 3;\r\n      this.currentUser = \"\";\r\n    },\r\n    onDataChange(items) {\r\n      let _locks = [];\r\n      items.forEach((item) => {\r\n        _locks.push({\r\n          ID: item.key,\r\n        });\r\n      });\r\n      this.locks = _locks;\r\n    },\r\n    onDataChangeUsers(items) {\r\n      let _usersDB = [];\r\n      items.forEach((item) => {\r\n        let data = item.val();\r\n        _usersDB.push({\r\n          code: item.key,\r\n          ID: data.ID,\r\n          pass: data.pass,\r\n          blocked: data.blocked,\r\n        });\r\n      });\r\n      this.usersDB = _usersDB;\r\n      //console.log(this.usersDB);\r\n    },\r\n    validate() {\r\n      if (this.authType === \"c\") {\r\n        //console.log(\"type c\");\r\n        this.cAuth();\r\n      } else if (this.authType === \"c+w\") {\r\n        //console.log(\"type c+w\");\r\n        this.c_wAuth();\r\n      } else if (this.authType === \"cw\") {\r\n        //console.log(\"type cw\");\r\n        this.cwAuth();\r\n      }\r\n    },\r\n    cAuth() {\r\n      let data = {\r\n        credentials: this.credentials,\r\n      };\r\n      if (this.checkCode(data) && this.codeCheck === false) {\r\n        if (this.checkBlocked(data)) {\r\n          this.printMessage(\r\n            \"warning\",\r\n            \"Account currently blocked, contact administrator\"\r\n          );\r\n          //alert(\"Account currently blocked, contact administrator\")\r\n          this.clearMem();\r\n          return;\r\n        }\r\n        this.currentUser = this.credentials;\r\n        this.printMessage(\"info\", \"Input password\");\r\n        //alert(\"Input password\");\r\n        this.credentials = \"\";\r\n        this.codeCheck = true;\r\n      } else if (this.codeCheck === true) {\r\n        if (this.checkPas(data)) {\r\n          this.tries = 3;\r\n          this.codeCheck = false;\r\n          this.credentials = \"\";\r\n          this.printMessage(\"success\", \"Lock unlocked\");\r\n          //alert(\"Lock unlocked\");\r\n        } else {\r\n          this.tries--;\r\n          if (this.tries == 0) {\r\n            this.printMessage(\"warning\", \"Account temporary blocked\");\r\n            //alert(\"Account temporary blocked\");\r\n            this.blockUser(this.currentUser);\r\n            return;\r\n          } else {\r\n            //alert(\"Invalid password\\nTries remaining \" + this.tries);\r\n            this.printMessage(\r\n              \"warning\",\r\n              \"Invalid password. Tries remaining \" + this.tries\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        this.credentials = \"\";\r\n        this.printMessage(\"warning\", \"Invalid credentials\");\r\n        //alert(\"Invalid credentials\");\r\n      }\r\n    },\r\n    c_wAuth() {\r\n      let data = {\r\n        credentials: this.credentials,\r\n      };\r\n      if (this.checkCode(data) && this.codeCheck === false) {\r\n        if (this.checkBlocked(data)) {\r\n          this.printMessage(\r\n            \"warning\",\r\n            \"Account currently blocked, contact administrator\"\r\n          );\r\n          //alert(\"Account currently blocked, contact administrator\")\r\n          this.clearMem();\r\n          return;\r\n        }\r\n        this.printMessage(\"info\", \"Input password\");\r\n        //alert(\"Input password\");\r\n        this.currentUser = this.credentials;\r\n        this.credentials = \"\";\r\n        this.codeCheck = true;\r\n      } else if (this.codeCheck === true) {\r\n        if (this.checkPas(data)) {\r\n          this.tries = 3;\r\n          this.codeCheck = false;\r\n          this.credentials = \"\";\r\n          if (!this.checkSchedule()) {\r\n            this.printMessage(\r\n              \"info\",\r\n              \"You are off schedule, wait for authentication\"\r\n            );\r\n            //alert(\"You are off schedule, wait for authentication\");\r\n            this.updateLockAuth();\r\n            return;\r\n          } else {\r\n            this.printMessage(\"success\", \"Lock unlocked\");\r\n            //alert(\"Lock unlocked\");\r\n          }\r\n        } else {\r\n          this.tries--;\r\n          if (this.tries == 0) {\r\n            this.printMessage(\"warning\", \"Account temporary blocked\");\r\n            //alert(\"Account temporary blocked\");\r\n            this.blockUser(this.currentUser);\r\n            return;\r\n          } else {\r\n            this.printMessage(\r\n              \"warning\",\r\n              \"Invalid password. Tries remaining \" + this.tries\r\n            );\r\n            //alert(\"Invalid password\\nTries remaining \" + this.tries);\r\n          }\r\n        }\r\n      } else {\r\n        this.credentials = \"\";\r\n        this.printMessage(\"warning\", \"Invalid credentials\");\r\n        //alert(\"Invalid credentials\");\r\n      }\r\n    },\r\n    cwAuth() {\r\n      let data = {\r\n        credentials: this.credentials,\r\n      };\r\n      if (this.checkCode(data) && this.codeCheck === false) {\r\n        if (this.checkBlocked(data)) {\r\n          this.printMessage(\r\n            \"warning\",\r\n            \"Account currently blocked, contact administrator\"\r\n          );\r\n          //alert(\"Account currently blocked, contact administrator\")\r\n          this.clearMem();\r\n          return;\r\n        }\r\n        if (!this.checkSchedule()) {\r\n          this.printMessage(\"warning\", \"Come back during your schedule!\");\r\n          //alert(\"Come back during your schedule!\");\r\n          this.clearMem();\r\n          return;\r\n        }\r\n        this.printMessage(\"info\", \"Input password\");\r\n        //alert(\"Input password\");\r\n        this.currentUser = this.credentials;\r\n        this.credentials = \"\";\r\n        this.codeCheck = true;\r\n      } else if (this.codeCheck === true) {\r\n        if (this.checkPas(data)) {\r\n          this.tries = 3;\r\n          this.codeCheck = false;\r\n          this.credentials = \"\";\r\n          this.printMessage(\"info\", \"Wait for authentication\");\r\n          //alert(\"Wait for authentication\")\r\n          this.updateLockAuth();\r\n        } else {\r\n          this.tries--;\r\n          if (this.tries == 0) {\r\n            this.printMessage(\"warning\", \"Account temporary blocked\");\r\n            //alert(\"Account temporary blocked\");\r\n            this.blockUser(this.currentUser);\r\n            return;\r\n          } else {\r\n            this.printMessage(\r\n              \"warning\",\r\n              \"Invalid password. Tries remaining \" + this.tries\r\n            );\r\n            //alert(\"Invalid password\\nTries remaining \" + this.tries);\r\n          }\r\n        }\r\n      } else {\r\n        this.credentials = \"\";\r\n        this.printMessage(\"warning\", \"Invalid credentials\");\r\n        //alert(\"Invalid credentials\");\r\n      }\r\n    },\r\n    checkCode(data) {\r\n      //console.log(this.users.length);\r\n      let check = false;\r\n      this.usersDB.forEach((user) => {\r\n        //console.log(\"data.credentials, user.code\");\r\n        if (data.credentials == user.code) {\r\n          this.id = user.ID;\r\n          check = true;\r\n        }\r\n        //console.log(user.ID, user.code, user.pass);\r\n      });\r\n      return check;\r\n    },\r\n    checkPas(data) {\r\n      let check = false;\r\n      this.usersDB.forEach((user) => {\r\n        //console.log(data.credentials, user.pass);\r\n        if (data.credentials == user.pass && this.id == user.ID) {\r\n          this.id = user.ID;\r\n          check = true;\r\n        }\r\n      });\r\n      return check;\r\n    },\r\n    checkBlocked(data) {\r\n      let check = true;\r\n\r\n      for (let i = 0; i < this.usersDB.length; i++) {\r\n        if (this.usersDB[i].code == data.credentials) {\r\n          check = this.usersDB[i].blocked;\r\n        }\r\n      }\r\n      return check;\r\n    },\r\n    selectLock() {\r\n      //console.log(this.selected);\r\n      this.showSim = true;\r\n      let data;\r\n      onValue(\r\n        DataService.getFromPath(\"/locks/\" + this.selected + \"/users\"),\r\n        (snapshot) => {\r\n          data = snapshot;\r\n          this.onDataChangeUsers(data);\r\n        }\r\n      );\r\n      onValue(\r\n        DataService.getFromPath(\"locks/\" + this.selected + \"/info/authType\"),\r\n        (snapshot) => {\r\n          data = snapshot;\r\n          if (data.exists()) {\r\n            this.authType = data.val();\r\n          } else this.authType = \"c\";\r\n        }\r\n      );\r\n    },\r\n    updateLockAuth() {\r\n      const authDate = moment().format(\"LLL\");\r\n      const update = {};\r\n      update[\"/locks/\" + this.selected + \"/auth/lock\"] = authDate;\r\n      //console.log(update);\r\n      DataService.update(update).catch((e) => {\r\n        console.log(e);\r\n        this.printMessage(\r\n          \"danger\",\r\n          \"Error occured, report it to administrator!\"\r\n        );\r\n        //alert(\"There was error, report to administrator\");\r\n      });\r\n    },\r\n    authorizeAccess() {\r\n      let lockAuth;\r\n      get(\r\n        DataService.getFromPath(\"/locks/\" + this.selected + \"/auth/lock\")\r\n      ).then((snapshot) => {\r\n        lockAuth = snapshot.val();\r\n        if (lockAuth == \"\" || lockAuth == null) {\r\n          this.printMessage(\"warning\", \"Wait for user first!\");\r\n          //alert(\"Wait for user first!\");\r\n        } else {\r\n          let time = moment().format(\"LLL\");\r\n          let minutes = moment(time, \"LLL\").diff(\r\n            moment(lockAuth, \"LLL\"),\r\n            \"minutes\"\r\n          );\r\n          if (minutes <= 1 && minutes >= -1) {\r\n            this.openLock();\r\n          } else {\r\n            this.clearAuthorization();\r\n          }\r\n        }\r\n      });\r\n      //console.log(lockAuth);\r\n    },\r\n    // getAuth() {\r\n    //   let data;\r\n    //   get(\r\n    //     DataService.getFromPath(\"/locks/\" + this.selected + \"/auth/lock\")\r\n    //   ).then((snapshot) => {\r\n    //       data = snapshot.val();\r\n    //   });\r\n    //   onValue(\r\n    //     DataService.getFromPath(\"/locks/\" + this.selected + \"/auth/lock\"),\r\n    //     (snapshot) => {\r\n    //       data = snapshot;\r\n    //       return data.val();\r\n    //     }\r\n    //   );\r\n    // },\r\n    clearAuthorization() {\r\n      const update = {};\r\n      update[\"/locks/\" + this.selected + \"/auth/lock\"] = \"\";\r\n      DataService.update(update)\r\n        .then(() => {\r\n          this.printMessage(\"warning\", \"Time difference is too great!\");\r\n          //alert(\"Time difference is too great!\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          this.printMessage(\r\n            \"danger\",\r\n            \"Error occured, report it to administrator!\"\r\n          );\r\n          //alert(\"There was error, report to administrator\");\r\n        });\r\n    },\r\n    openLock() {\r\n      const update = {};\r\n      update[\"/locks/\" + this.selected + \"/auth/lock\"] = \"\";\r\n      DataService.update(update)\r\n        .then(() => {\r\n          this.printMessage(\"success\", \"Lock unlocked\");\r\n          //alert(\"Lock unlocked\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          this.printMessage(\r\n            \"danger\",\r\n            \"Error occured, report it to administrator!\"\r\n          );\r\n          //alert(\"There was error, report to administrator\");\r\n        });\r\n    },\r\n    getCurrentDay() {\r\n      let Today = moment().day();\r\n      let TDay;\r\n      if (Today === 0) {\r\n        TDay = \"Sunday\";\r\n      } else if (Today === 1) {\r\n        TDay = \"Monday\";\r\n      } else if (Today === 2) {\r\n        TDay = \"Tuesday\";\r\n      } else if (Today === 3) {\r\n        TDay = \"Wednesday\";\r\n      } else if (Today === 4) {\r\n        TDay = \"Thursday\";\r\n      } else if (Today === 5) {\r\n        TDay = \"Friday\";\r\n      } else if (Today === 6) {\r\n        TDay = \"Saturday\";\r\n      }\r\n      return TDay;\r\n    },\r\n    getSchedule() {\r\n      let data;\r\n      onValue(\r\n        DataService.getFromPath(\r\n          \"/locks/\" + this.selected + \"/schedule/\" + this.id\r\n        ),\r\n        (snapshot) => {\r\n          data = snapshot;\r\n          this.scheduleList(data);\r\n        }\r\n      );\r\n    },\r\n    scheduleList(items) {\r\n      let _scheduleT = [];\r\n      items.forEach((item) => {\r\n        let data = item.val();\r\n        //console.log(data);\r\n        _scheduleT.push({\r\n          ID: item.key,\r\n          start: data.start.hour + \":\" + data.start.min,\r\n          end: data.end.hour + \":\" + data.end.min,\r\n          day: data.day,\r\n        });\r\n      });\r\n      //console.log(_scheduleT);\r\n      this.scheduleT = _scheduleT;\r\n    },\r\n    checkSchedule() {\r\n      this.getSchedule();\r\n      let format = \"hh:mm:ss a\";\r\n      let time = moment();\r\n      let day = this.getCurrentDay();\r\n      let duringSchedule = false;\r\n      //console.log(day, this.scheduleT.length);\r\n      for (let i = 0; i < this.scheduleT.length; i++) {\r\n        if (this.scheduleT[i].day === day) {\r\n          if (\r\n            time.isBetween(\r\n              moment(this.scheduleT[i].start, format),\r\n              moment(this.scheduleT[i].end, format)\r\n            )\r\n          ) {\r\n            duringSchedule = true;\r\n            //console.log(\"Test udany\");\r\n          } else {\r\n            //console.log(\"Test nie udany\");\r\n          }\r\n        }\r\n      }\r\n      return duringSchedule;\r\n    },\r\n    blockUser(code) {\r\n      const update = {};\r\n      update[\"/locks/\" + this.selected + \"/users/\" + code + \"/blocked\"] = true;\r\n      DataService.update(update)\r\n        .then(() => {\r\n          //console.log(\"Confirmed\");\r\n          this.clearMem();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          this.printMessage(\r\n            \"danger\",\r\n            \"Error occured, report it to administrator!\"\r\n          );\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    let data;\r\n    onValue(DataService.getFromPath(\"/locksList\"), (snapshot) => {\r\n      //console.log(snapshot.val());\r\n      data = snapshot;\r\n      this.onDataChange(data);\r\n    });\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n.content {\r\n  overflow-y: auto;\r\n  display: flex;\r\n}\r\n\r\n.wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  gap: 1rem;\r\n  background-color: #b1b1b1;\r\n  border-radius: 0.5rem;\r\n  overflow-y: auto;\r\n  box-shadow: 0px -1px 10px 4px #141414a6;\r\n}\r\n.center {\r\n  border-radius: 0.5rem;\r\n  background-color: #ffffffb0;\r\n  padding: 1.5rem;\r\n}\r\n.sim {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.buttons {\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n}\r\n</style>\r\n","import { render } from \"./LockSim.vue?vue&type=template&id=1f533eee&scoped=true\"\nimport script from \"./LockSim.vue?vue&type=script&lang=js\"\nexport * from \"./LockSim.vue?vue&type=script&lang=js\"\n\nimport \"./LockSim.vue?vue&type=style&index=0&id=1f533eee&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Teczka Michała J\\\\Studia\\\\Inżynierka\\\\vue-app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1f533eee\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","disabled","value","for","_createBlock","_component_MainLayout","$data","$event","_hoisted_5","_createElementBlock","_Fragment","_renderList","locks","item","key","ID","_hoisted_6","_hoisted_7","_hoisted_9","type","id","required","name","onClick","$options","_Teleport","to","_createVNode","_component_Message","messageType","show","message","closeMessage","components","MainLayout","Message","data","usersDB","selected","currentUser","showSim","credentials","codeCheck","tries","scheduleT","authType","showMessage","messageContent","watch","this","clearMem","selectLock","methods","printMessage","onDataChange","items","_locks","forEach","push","onDataChangeUsers","_usersDB","val","code","pass","blocked","validate","cAuth","c_wAuth","cwAuth","checkCode","checkBlocked","checkPas","blockUser","checkSchedule","updateLockAuth","check","user","i","length","onValue","DataService","snapshot","exists","authDate","moment","format","update","catch","e","console","log","authorizeAccess","lockAuth","get","then","time","minutes","diff","openLock","clearAuthorization","getCurrentDay","TDay","Today","day","getSchedule","scheduleList","_scheduleT","start","hour","min","end","duringSchedule","isBetween","mounted","__exports__","render"],"sourceRoot":""}